@charset "UTF-8";

@mixin selector($element, $values...) {

    $selector: ();
    $key: ();

    @each $value in $values {

        @if type-of($values) == list {
            $i: index($values, $value);

            $id: if($element == a ,
                    '.#{$value} &:nth-of-type(#{$i})',
                    '.#{$value} &:nth-of-type(#{$i}) > a');

            $selector: $selector, unquote("#{$id}");

            @include mixin-dryer($id) {
                @content;
            }
        }
        @else if type-of($values) == map {
            // $key: $key, m-get($values, $value);
            $selector: $selector, unquote(".#{$element}-#{map-keys($value)}");
            .#{$element}-#{map-keys($value)} {
                @content;
            }
        }
    }
}

// 情境
// @mixin state($color, $types: false) {
//     $class: &;

//     @if($types == false) {
//         color: $color;

//         @at-root {
//             a#{$class}:hover,
//             a#{$class}:focus {
//                 color: darken($color, 10%);
//             }
//         }
//     }
//     @if $types == "bg" {
//         background: $color;
//         border-color: darken(adjust-hue($color, -10), 6%);

//         @at-root {
//             a#{$class}:hover,
//             a#{$class}:focus {
//                 background-color: darken($color, 10%);
//             }
//         }
//     }
//     @if $types == "bg-light" {
//         background: lighten($color, 38%);
//         border-color: lighten(adjust-hue($color, -10), 20%);
//     }
//     @if $types == "btn" {
//         // background: $color;
//         // border-color: darken($color, 5%);
//         color: $color;
//         border-color: $color;
//     }
// }